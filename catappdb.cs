#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4984
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[System.Data.Linq.Mapping.DatabaseAttribute(Name="catappdb")]
public partial class Catappdb : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertAttempts(Attempts instance);
  partial void UpdateAttempts(Attempts instance);
  partial void DeleteAttempts(Attempts instance);
  partial void InsertCategories(Categories instance);
  partial void UpdateCategories(Categories instance);
  partial void DeleteCategories(Categories instance);
  partial void InsertOptions(Options instance);
  partial void UpdateOptions(Options instance);
  partial void DeleteOptions(Options instance);
  partial void InsertQuestion_categories(Question_categories instance);
  partial void UpdateQuestion_categories(Question_categories instance);
  partial void DeleteQuestion_categories(Question_categories instance);
  partial void InsertQuestions(Questions instance);
  partial void UpdateQuestions(Questions instance);
  partial void DeleteQuestions(Questions instance);
  partial void InsertTests(Tests instance);
  partial void UpdateTests(Tests instance);
  partial void DeleteTests(Tests instance);
  partial void InsertUsers(Users instance);
  partial void UpdateUsers(Users instance);
  partial void DeleteUsers(Users instance);
  #endregion
	
	public Catappdb(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
//	public Catappdb(System.Data.IDbConnection connection) : 
//			base(connection, mappingSource)
//	{
//		OnCreated();
//	}
	
//	public Catappdb(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
//			base(connection, mappingSource)
//	{
//		OnCreated();
//	}
	
//	public Catappdb(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
//			base(connection, mappingSource)
//	{
//		OnCreated();
//	}
	
	public System.Data.Linq.Table<Android_metadata> Android_metadata
	{
		get
		{
			return this.GetTable<Android_metadata>();
		}
	}
	
	public System.Data.Linq.Table<Attempt_details> Attempt_details
	{
		get
		{
			return this.GetTable<Attempt_details>();
		}
	}
	
	public System.Data.Linq.Table<Attempts> Attempts
	{
		get
		{
			return this.GetTable<Attempts>();
		}
	}
	
	public System.Data.Linq.Table<Categories> Categories
	{
		get
		{
			return this.GetTable<Categories>();
		}
	}
	
	public System.Data.Linq.Table<Options> Options
	{
		get
		{
			return this.GetTable<Options>();
		}
	}
	
	public System.Data.Linq.Table<Question_categories> Question_categories
	{
		get
		{
			return this.GetTable<Question_categories>();
		}
	}
	
	public System.Data.Linq.Table<Questions> Questions
	{
		get
		{
			return this.GetTable<Questions>();
		}
	}
	
	public System.Data.Linq.Table<Tests> Tests
	{
		get
		{
			return this.GetTable<Tests>();
		}
	}
	
	public System.Data.Linq.Table<Users> Users
	{
		get
		{
			return this.GetTable<Users>();
		}
	}
}

[Table(Name="android_metadata")]
public partial class Android_metadata
{
	
	private string _Locale;
	
	public Android_metadata()
	{
	}
	
	[Column(Name="locale", Storage="_Locale", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Locale
	{
		get
		{
			return this._Locale;
		}
		set
		{
			if ((this._Locale != value))
			{
				this._Locale = value;
			}
		}
	}
}

[Table(Name="attempt_details")]
public partial class Attempt_details
{
	
	private System.Data.Linq.Binary _Q_id;
	
	private System.Data.Linq.Binary _A_id;
	
	private System.Data.Linq.Binary _O_id;
	
	private System.Nullable<bool> _Mark_flag;
	
	public Attempt_details()
	{
	}
	
	[Column(Name="q_id", Storage="_Q_id", DbType="Image", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
	public System.Data.Linq.Binary Q_id
	{
		get
		{
			return this._Q_id;
		}
		set
		{
			if ((this._Q_id != value))
			{
				this._Q_id = value;
			}
		}
	}
	
	[Column(Name="a_id", Storage="_A_id", DbType="Image", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
	public System.Data.Linq.Binary A_id
	{
		get
		{
			return this._A_id;
		}
		set
		{
			if ((this._A_id != value))
			{
				this._A_id = value;
			}
		}
	}
	
	[Column(Name="o_id", Storage="_O_id", DbType="Image", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
	public System.Data.Linq.Binary O_id
	{
		get
		{
			return this._O_id;
		}
		set
		{
			if ((this._O_id != value))
			{
				this._O_id = value;
			}
		}
	}
	
	[Column(Name="mark_flag", Storage="_Mark_flag", DbType="Bit")]
	public System.Nullable<bool> Mark_flag
	{
		get
		{
			return this._Mark_flag;
		}
		set
		{
			if ((this._Mark_flag != value))
			{
				this._Mark_flag = value;
			}
		}
	}
}

[Table(Name="attempts")]
public partial class Attempts : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long @__id;
	
	private long _U_id;
	
	private long _T_id;
	
	private long _Timpstamp;
	
	private System.Nullable<bool> _Complete;
	
	private System.Nullable<long> _Elapsed_time;
	
	private System.Nullable<bool> _Timed;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On_idChanging(long value);
    partial void On_idChanged();
    partial void OnU_idChanging(long value);
    partial void OnU_idChanged();
    partial void OnT_idChanging(long value);
    partial void OnT_idChanged();
    partial void OnTimpstampChanging(long value);
    partial void OnTimpstampChanged();
    partial void OnCompleteChanging(System.Nullable<bool> value);
    partial void OnCompleteChanged();
    partial void OnElapsed_timeChanging(System.Nullable<long> value);
    partial void OnElapsed_timeChanged();
    partial void OnTimedChanging(System.Nullable<bool> value);
    partial void OnTimedChanged();
    #endregion
	
	public Attempts()
	{
		OnCreated();
	}
	
	[Column(Storage="__id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
	public long _id
	{
		get
		{
			return this.@__id;
		}
		set
		{
			if ((this.@__id != value))
			{
				this.On_idChanging(value);
				this.SendPropertyChanging();
				this.@__id = value;
				this.SendPropertyChanged("_id");
				this.On_idChanged();
			}
		}
	}
	
	[Column(Name="u_id", Storage="_U_id", DbType="BigInt NOT NULL")]
	public long U_id
	{
		get
		{
			return this._U_id;
		}
		set
		{
			if ((this._U_id != value))
			{
				this.OnU_idChanging(value);
				this.SendPropertyChanging();
				this._U_id = value;
				this.SendPropertyChanged("U_id");
				this.OnU_idChanged();
			}
		}
	}
	
	[Column(Name="t_id", Storage="_T_id", DbType="BigInt NOT NULL")]
	public long T_id
	{
		get
		{
			return this._T_id;
		}
		set
		{
			if ((this._T_id != value))
			{
				this.OnT_idChanging(value);
				this.SendPropertyChanging();
				this._T_id = value;
				this.SendPropertyChanged("T_id");
				this.OnT_idChanged();
			}
		}
	}
	
	[Column(Name="timpstamp", Storage="_Timpstamp", DbType="BigInt NOT NULL")]
	public long Timpstamp
	{
		get
		{
			return this._Timpstamp;
		}
		set
		{
			if ((this._Timpstamp != value))
			{
				this.OnTimpstampChanging(value);
				this.SendPropertyChanging();
				this._Timpstamp = value;
				this.SendPropertyChanged("Timpstamp");
				this.OnTimpstampChanged();
			}
		}
	}
	
	[Column(Name="complete", Storage="_Complete", DbType="Bit")]
	public System.Nullable<bool> Complete
	{
		get
		{
			return this._Complete;
		}
		set
		{
			if ((this._Complete != value))
			{
				this.OnCompleteChanging(value);
				this.SendPropertyChanging();
				this._Complete = value;
				this.SendPropertyChanged("Complete");
				this.OnCompleteChanged();
			}
		}
	}
	
	[Column(Name="elapsed_time", Storage="_Elapsed_time", DbType="BigInt")]
	public System.Nullable<long> Elapsed_time
	{
		get
		{
			return this._Elapsed_time;
		}
		set
		{
			if ((this._Elapsed_time != value))
			{
				this.OnElapsed_timeChanging(value);
				this.SendPropertyChanging();
				this._Elapsed_time = value;
				this.SendPropertyChanged("Elapsed_time");
				this.OnElapsed_timeChanged();
			}
		}
	}
	
	[Column(Name="timed", Storage="_Timed", DbType="Bit")]
	public System.Nullable<bool> Timed
	{
		get
		{
			return this._Timed;
		}
		set
		{
			if ((this._Timed != value))
			{
				this.OnTimedChanging(value);
				this.SendPropertyChanging();
				this._Timed = value;
				this.SendPropertyChanged("Timed");
				this.OnTimedChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="categories")]
public partial class Categories : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long @__id;
	
	private string _Name;
	
	private EntitySet<Question_categories> _Question_categories;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On_idChanging(long value);
    partial void On_idChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
	
	public Categories()
	{
		this._Question_categories = new EntitySet<Question_categories>(new Action<Question_categories>(this.attach_Question_categories), new Action<Question_categories>(this.detach_Question_categories));
		OnCreated();
	}
	
	[Column(Storage="__id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long _id
	{
		get
		{
			return this.@__id;
		}
		set
		{
			if ((this.@__id != value))
			{
				this.On_idChanging(value);
				this.SendPropertyChanging();
				this.@__id = value;
				this.SendPropertyChanged("_id");
				this.On_idChanged();
			}
		}
	}
	
	[Column(Name="name", Storage="_Name", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[Association(Name="FK__question_categories__000000000000005E", Storage="_Question_categories", ThisKey="_id", OtherKey="C_id", DeleteRule="NO ACTION")]
	public EntitySet<Question_categories> Question_categories
	{
		get
		{
			return this._Question_categories;
		}
		set
		{
			this._Question_categories.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Question_categories(Question_categories entity)
	{
		this.SendPropertyChanging();
		entity.Categories = this;
	}
	
	private void detach_Question_categories(Question_categories entity)
	{
		this.SendPropertyChanging();
		entity.Categories = null;
	}
}

[Table(Name="options")]
public partial class Options : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long @__id;
	
	private string _Content;
	
	private System.Nullable<long> _Q_id;
	
	private System.Nullable<bool> _Correct;
	
	private EntityRef<Questions> _Questions;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On_idChanging(long value);
    partial void On_idChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnQ_idChanging(System.Nullable<long> value);
    partial void OnQ_idChanged();
    partial void OnCorrectChanging(System.Nullable<bool> value);
    partial void OnCorrectChanged();
    #endregion
	
	public Options()
	{
		this._Questions = default(EntityRef<Questions>);
		OnCreated();
	}
	
	[Column(Storage="__id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long _id
	{
		get
		{
			return this.@__id;
		}
		set
		{
			if ((this.@__id != value))
			{
				this.On_idChanging(value);
				this.SendPropertyChanging();
				this.@__id = value;
				this.SendPropertyChanged("_id");
				this.On_idChanged();
			}
		}
	}
	
	[Column(Name="content", Storage="_Content", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Content
	{
		get
		{
			return this._Content;
		}
		set
		{
			if ((this._Content != value))
			{
				this.OnContentChanging(value);
				this.SendPropertyChanging();
				this._Content = value;
				this.SendPropertyChanged("Content");
				this.OnContentChanged();
			}
		}
	}
	
	[Column(Name="q_id", Storage="_Q_id", DbType="BigInt")]
	public System.Nullable<long> Q_id
	{
		get
		{
			return this._Q_id;
		}
		set
		{
			if ((this._Q_id != value))
			{
				this.OnQ_idChanging(value);
				this.SendPropertyChanging();
				this._Q_id = value;
				this.SendPropertyChanged("Q_id");
				this.OnQ_idChanged();
			}
		}
	}
	
	[Column(Name="correct", Storage="_Correct", DbType="Bit")]
	public System.Nullable<bool> Correct
	{
		get
		{
			return this._Correct;
		}
		set
		{
			if ((this._Correct != value))
			{
				this.OnCorrectChanging(value);
				this.SendPropertyChanging();
				this._Correct = value;
				this.SendPropertyChanged("Correct");
				this.OnCorrectChanged();
			}
		}
	}
	
	[Association(Name="FK__options__0000000000000091", Storage="_Questions", ThisKey="Q_id", OtherKey="_id", IsForeignKey=true)]
	public Questions Questions
	{
		get
		{
			return this._Questions.Entity;
		}
		set
		{
			Questions previousValue = this._Questions.Entity;
			if (((previousValue != value) 
						|| (this._Questions.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Questions.Entity = null;
					previousValue.Options.Remove(this);
				}
				this._Questions.Entity = value;
				if ((value != null))
				{
					value.Options.Add(this);
					this._Q_id = value._id;
				}
				else
				{
					this._Q_id = default(Nullable<long>);
				}
				this.SendPropertyChanged("Questions");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="question_categories")]
public partial class Question_categories : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Q_id;
	
	private long _C_id;
	
	private EntityRef<Categories> _Categories;
	
	private EntityRef<Questions> _Questions;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQ_idChanging(long value);
    partial void OnQ_idChanged();
    partial void OnC_idChanging(long value);
    partial void OnC_idChanged();
    #endregion
	
	public Question_categories()
	{
		this._Categories = default(EntityRef<Categories>);
		this._Questions = default(EntityRef<Questions>);
		OnCreated();
	}
	
	[Column(Name="q_id", Storage="_Q_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
	public long Q_id
	{
		get
		{
			return this._Q_id;
		}
		set
		{
			if ((this._Q_id != value))
			{
				this.OnQ_idChanging(value);
				this.SendPropertyChanging();
				this._Q_id = value;
				this.SendPropertyChanged("Q_id");
				this.OnQ_idChanged();
			}
		}
	}
	
	[Column(Name="c_id", Storage="_C_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
	public long C_id
	{
		get
		{
			return this._C_id;
		}
		set
		{
			if ((this._C_id != value))
			{
				this.OnC_idChanging(value);
				this.SendPropertyChanging();
				this._C_id = value;
				this.SendPropertyChanged("C_id");
				this.OnC_idChanged();
			}
		}
	}
	
	[Association(Name="FK__question_categories__000000000000005E", Storage="_Categories", ThisKey="C_id", OtherKey="_id", IsForeignKey=true)]
	public Categories Categories
	{
		get
		{
			return this._Categories.Entity;
		}
		set
		{
			Categories previousValue = this._Categories.Entity;
			if (((previousValue != value) 
						|| (this._Categories.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Categories.Entity = null;
					previousValue.Question_categories.Remove(this);
				}
				this._Categories.Entity = value;
				if ((value != null))
				{
					value.Question_categories.Add(this);
					this._C_id = value._id;
				}
				else
				{
					this._C_id = default(long);
				}
				this.SendPropertyChanged("Categories");
			}
		}
	}
	
	[Association(Name="FK__question_categories__0000000000000062", Storage="_Questions", ThisKey="Q_id", OtherKey="_id", IsForeignKey=true)]
	public Questions Questions
	{
		get
		{
			return this._Questions.Entity;
		}
		set
		{
			Questions previousValue = this._Questions.Entity;
			if (((previousValue != value) 
						|| (this._Questions.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Questions.Entity = null;
					previousValue.Question_categories.Remove(this);
				}
				this._Questions.Entity = value;
				if ((value != null))
				{
					value.Question_categories.Add(this);
					this._Q_id = value._id;
				}
				else
				{
					this._Q_id = default(long);
				}
				this.SendPropertyChanged("Questions");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="questions")]
public partial class Questions : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long @__id;
	
	private string _Header;
	
	private string _Content;
	
	private string _Image_file;
	
	private string _Answer_text;
	
	private string _Image_file_ans;
	
	private string _Year;
	
	private string _Name;
	
	private System.Nullable<long> _T_id;
	
	private EntitySet<Options> _Options;
	
	private EntitySet<Question_categories> _Question_categories;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On_idChanging(long value);
    partial void On_idChanged();
    partial void OnHeaderChanging(string value);
    partial void OnHeaderChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnImage_fileChanging(string value);
    partial void OnImage_fileChanged();
    partial void OnAnswer_textChanging(string value);
    partial void OnAnswer_textChanged();
    partial void OnImage_file_ansChanging(string value);
    partial void OnImage_file_ansChanged();
    partial void OnYearChanging(string value);
    partial void OnYearChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnT_idChanging(System.Nullable<long> value);
    partial void OnT_idChanged();
    #endregion
	
	public Questions()
	{
		this._Options = new EntitySet<Options>(new Action<Options>(this.attach_Options), new Action<Options>(this.detach_Options));
		this._Question_categories = new EntitySet<Question_categories>(new Action<Question_categories>(this.attach_Question_categories), new Action<Question_categories>(this.detach_Question_categories));
		OnCreated();
	}
	
	[Column(Storage="__id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
	public long _id
	{
		get
		{
			return this.@__id;
		}
		set
		{
			if ((this.@__id != value))
			{
				this.On_idChanging(value);
				this.SendPropertyChanging();
				this.@__id = value;
				this.SendPropertyChanged("_id");
				this.On_idChanged();
			}
		}
	}
	
	[Column(Name="header", Storage="_Header", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Header
	{
		get
		{
			return this._Header;
		}
		set
		{
			if ((this._Header != value))
			{
				this.OnHeaderChanging(value);
				this.SendPropertyChanging();
				this._Header = value;
				this.SendPropertyChanged("Header");
				this.OnHeaderChanged();
			}
		}
	}
	
	[Column(Name="content", Storage="_Content", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Content
	{
		get
		{
			return this._Content;
		}
		set
		{
			if ((this._Content != value))
			{
				this.OnContentChanging(value);
				this.SendPropertyChanging();
				this._Content = value;
				this.SendPropertyChanged("Content");
				this.OnContentChanged();
			}
		}
	}
	
	[Column(Name="image_file", Storage="_Image_file", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Image_file
	{
		get
		{
			return this._Image_file;
		}
		set
		{
			if ((this._Image_file != value))
			{
				this.OnImage_fileChanging(value);
				this.SendPropertyChanging();
				this._Image_file = value;
				this.SendPropertyChanged("Image_file");
				this.OnImage_fileChanged();
			}
		}
	}
	
	[Column(Name="answer_text", Storage="_Answer_text", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Answer_text
	{
		get
		{
			return this._Answer_text;
		}
		set
		{
			if ((this._Answer_text != value))
			{
				this.OnAnswer_textChanging(value);
				this.SendPropertyChanging();
				this._Answer_text = value;
				this.SendPropertyChanged("Answer_text");
				this.OnAnswer_textChanged();
			}
		}
	}
	
	[Column(Name="image_file_ans", Storage="_Image_file_ans", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Image_file_ans
	{
		get
		{
			return this._Image_file_ans;
		}
		set
		{
			if ((this._Image_file_ans != value))
			{
				this.OnImage_file_ansChanging(value);
				this.SendPropertyChanging();
				this._Image_file_ans = value;
				this.SendPropertyChanged("Image_file_ans");
				this.OnImage_file_ansChanged();
			}
		}
	}
	
	[Column(Name="year", Storage="_Year", DbType="NChar(4)")]
	public string Year
	{
		get
		{
			return this._Year;
		}
		set
		{
			if ((this._Year != value))
			{
				this.OnYearChanging(value);
				this.SendPropertyChanging();
				this._Year = value;
				this.SendPropertyChanged("Year");
				this.OnYearChanged();
			}
		}
	}
	
	[Column(Name="name", Storage="_Name", DbType="NVarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[Column(Name="t_id", Storage="_T_id", DbType="BigInt")]
	public System.Nullable<long> T_id
	{
		get
		{
			return this._T_id;
		}
		set
		{
			if ((this._T_id != value))
			{
				this.OnT_idChanging(value);
				this.SendPropertyChanging();
				this._T_id = value;
				this.SendPropertyChanged("T_id");
				this.OnT_idChanged();
			}
		}
	}
	
	[Association(Name="FK__options__0000000000000091", Storage="_Options", ThisKey="_id", OtherKey="Q_id", DeleteRule="NO ACTION")]
	public EntitySet<Options> Options
	{
		get
		{
			return this._Options;
		}
		set
		{
			this._Options.Assign(value);
		}
	}
	
	[Association(Name="FK__question_categories__0000000000000062", Storage="_Question_categories", ThisKey="_id", OtherKey="Q_id", DeleteRule="NO ACTION")]
	public EntitySet<Question_categories> Question_categories
	{
		get
		{
			return this._Question_categories;
		}
		set
		{
			this._Question_categories.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Options(Options entity)
	{
		this.SendPropertyChanging();
		entity.Questions = this;
	}
	
	private void detach_Options(Options entity)
	{
		this.SendPropertyChanging();
		entity.Questions = null;
	}
	
	private void attach_Question_categories(Question_categories entity)
	{
		this.SendPropertyChanging();
		entity.Questions = this;
	}
	
	private void detach_Question_categories(Question_categories entity)
	{
		this.SendPropertyChanging();
		entity.Questions = null;
	}
}

[Table(Name="tests")]
public partial class Tests : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long @__id;
	
	private string _Name;
	
	private long _Allowed_time;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On_idChanging(long value);
    partial void On_idChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAllowed_timeChanging(long value);
    partial void OnAllowed_timeChanged();
    #endregion
	
	public Tests()
	{
		OnCreated();
	}
	
	[Column(Storage="__id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long _id
	{
		get
		{
			return this.@__id;
		}
		set
		{
			if ((this.@__id != value))
			{
				this.On_idChanging(value);
				this.SendPropertyChanging();
				this.@__id = value;
				this.SendPropertyChanged("_id");
				this.On_idChanged();
			}
		}
	}
	
	[Column(Name="name", Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[Column(Name="allowed_time", Storage="_Allowed_time", DbType="BigInt NOT NULL")]
	public long Allowed_time
	{
		get
		{
			return this._Allowed_time;
		}
		set
		{
			if ((this._Allowed_time != value))
			{
				this.OnAllowed_timeChanging(value);
				this.SendPropertyChanging();
				this._Allowed_time = value;
				this.SendPropertyChanged("Allowed_time");
				this.OnAllowed_timeChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="users")]
public partial class Users : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long @__id;
	
	private string _Fullname;
	
	private System.Data.Linq.Binary _Phoneno;
	
	private string _Email;
	
	private System.Nullable<bool> _Registered;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On_idChanging(long value);
    partial void On_idChanged();
    partial void OnFullnameChanging(string value);
    partial void OnFullnameChanged();
    partial void OnPhonenoChanging(System.Data.Linq.Binary value);
    partial void OnPhonenoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnRegisteredChanging(System.Nullable<bool> value);
    partial void OnRegisteredChanged();
    #endregion
	
	public Users()
	{
		OnCreated();
	}
	
	[Column(Storage="__id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long _id
	{
		get
		{
			return this.@__id;
		}
		set
		{
			if ((this.@__id != value))
			{
				this.On_idChanging(value);
				this.SendPropertyChanging();
				this.@__id = value;
				this.SendPropertyChanged("_id");
				this.On_idChanged();
			}
		}
	}
	
	[Column(Name="fullname", Storage="_Fullname", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Fullname
	{
		get
		{
			return this._Fullname;
		}
		set
		{
			if ((this._Fullname != value))
			{
				this.OnFullnameChanging(value);
				this.SendPropertyChanging();
				this._Fullname = value;
				this.SendPropertyChanged("Fullname");
				this.OnFullnameChanged();
			}
		}
	}
	
	[Column(Name="phoneno", Storage="_Phoneno", DbType="Image", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
	public System.Data.Linq.Binary Phoneno
	{
		get
		{
			return this._Phoneno;
		}
		set
		{
			if ((this._Phoneno != value))
			{
				this.OnPhonenoChanging(value);
				this.SendPropertyChanging();
				this._Phoneno = value;
				this.SendPropertyChanged("Phoneno");
				this.OnPhonenoChanged();
			}
		}
	}
	
	[Column(Name="email", Storage="_Email", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[Column(Name="registered", Storage="_Registered", DbType="Bit")]
	public System.Nullable<bool> Registered
	{
		get
		{
			return this._Registered;
		}
		set
		{
			if ((this._Registered != value))
			{
				this.OnRegisteredChanging(value);
				this.SendPropertyChanging();
				this._Registered = value;
				this.SendPropertyChanged("Registered");
				this.OnRegisteredChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
